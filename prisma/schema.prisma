// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  password  String
  role      Role       @default(USER)
  suspended Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Post      Post[]
  Bookmark  Bookmark[]
  Like      Like[]
  Comment   Comment[]
  Report    Report[]
}

enum Role {
  USER
  ADMIN
  EDITOR
}

model Bookmark {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  post   Post @relation(fields: [postId], references: [id])
  userId Int
  postId Int

  @@unique([userId, postId])
}

model Post {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  imageUrl    String
  sources     String?
  location    Location   @relation(fields: [locationId], references: [id])
  user        User       @relation(fields: [userId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      Int
  locationId  Int
  language    Language   @relation(fields: [languageId], references: [id])
  languageId  Int
  content     Content    @relation(fields: [contentId], references: [id])
  contentId   Int
  Bookmark    Bookmark[]
  Like        Like[]
  Comment     Comment[]
  Report      Report[]

  @@index([createdAt])
}

model Location {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]
}

model Content {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]
}

model Language {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]
}

model Like {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model Comment {
  id     Int    @id @default(autoincrement())
  name   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
}

model Report {
  id     Int    @id @default(autoincrement())
  name   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
}
