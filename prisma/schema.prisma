// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bookmark {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String
  password  String
  role      Role       @default(USER)
  Bookmark  Bookmark[]
  shortName String?
  logo      String?
  phone     String?
  verified  Boolean    @default(false)
  suspended Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Post      Post[]
  notice    Notice[]
}

enum Role {
  USER
  ADMIN
  EDITOR
}

model Post {
  id          String     @id @default(uuid())
  title       String
  description String
  imageUrl    String
  videoUrl    String?
  location    Location   @relation(fields: [locationId], references: [id], onDelete: Cascade)
  locationId  String
  content     Content    @relation(fields: [contentId], references: [id], onDelete: Cascade)
  contentId   String
  language    Language   @relation(fields: [languageId], references: [id], onDelete: Cascade)
  languageId  String
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  Bookmark    Bookmark[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([createdAt])
}

model Location {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]
}

model Content {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]
}

model Language {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]
}

model Notice {
  id        String   @id @default(uuid())
  name      String
  user      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Visitor {
  id        String   @id @default(uuid())
  number    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
